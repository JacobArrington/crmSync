"""empty message

Revision ID: e2884d837fc9
Revises: 
Create Date: 2024-01-14 19:02:34.017250

"""
from alembic import op
import sqlalchemy as sa

import os
environment = os.getenv("FLASK_ENV")
SCHEMA = os.environ.get("SCHEMA")

# revision identifiers, used by Alembic.
revision = 'e2884d837fc9'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=40), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('hashed_password', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    if environment == "production":
        op.execute(f"ALTER TABLE users SET SCHEMA {SCHEMA};")
    op.create_table('widgets',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('widget_type', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('calculators',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('widgetId', sa.Integer(), nullable=True),
    sa.Column('balance', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('lump_sum', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('remainder_after_lump', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('interest_rate', sa.Numeric(precision=4, scale=2), nullable=True),
    sa.Column('installment_options', sa.Integer(), nullable=True),
    sa.Column('custom_installment', sa.Integer(), nullable=True),
    sa.Column('installment_amount', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('discount', sa.Numeric(precision=3, scale=2), nullable=True),
    sa.Column('custom_discount', sa.Numeric(precision=3, scale=2), nullable=True),
    sa.Column('total_after_discount', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('custom_monthly_payment', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('custom_months_to_pay', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['widgetId'], ['widgets.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('goals',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('widgetId', sa.Integer(), nullable=True),
    sa.Column('title', sa.String(length=255), nullable=True),
    sa.Column('note', sa.String(length=255), nullable=True),
    sa.Column('time_frame', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['widgetId'], ['widgets.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('hot_list',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('widgetId', sa.Integer(), nullable=True),
    sa.Column('dt', sa.String(length=255), nullable=True),
    sa.Column('account_balance', sa.String(length=255), nullable=True),
    sa.Column('note', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['widgetId'], ['widgets.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('scratch_pad',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('widgetId', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['widgetId'], ['widgets.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('sticky_note',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('widgetId', sa.Integer(), nullable=True),
    sa.Column('title', sa.String(length=255), nullable=True),
    sa.Column('note', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['widgetId'], ['widgets.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('sticky_note')
    op.drop_table('scratch_pad')
    op.drop_table('hot_list')
    op.drop_table('goals')
    op.drop_table('calculators')
    op.drop_table('widgets')
    op.drop_table('users')
    # ### end Alembic commands ###
